# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Headers
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
(header_csp) {
   # Defer & Override headers
   header Location http:// https://
   # Content Security Policy (CSP)
   header >Content-Security-Policy "default-src 'self'; script-src 'self' https://analytics.rubberverse.xyz https://comments.rubberverse.xyz https://challenges.cloudflare.com; style-src 'self' https://comments.rubberverse.xyz; img-src 'self'; connect-src 'self' https://analytics.rubberverse.xyz https://auth.rubberverse.xyz; frame-src 'self' https://auth.rubberverse.xyz https://comments.rubberverse.xyz https://challenges.cloudflare.com; font-src 'self' https://comments.rubberverse.xyz; object-src 'none'; base-uri 'self'; frame-ancestors 'none';"
   header >Permissions-Policy idle-detection=() microphone=() payment=() screen-wake-lock=() usb=() midi=() magnetometer=() hid=() geolocation=() gamepad=() camera=() bluetooth=() ambient-light-sensor=() accelerometer=() interest-cohort=()
   header >Referrer-Policy strict-origin-when-cross-origin
   # Access-Control-*
   header >Access-Control-Allow-Origin {args[0]}
   header >Access-Control-Allow-Credentials true
   header >Access-Control-Allow-Methods GET, POST, OPTIONS
   header >Access-Control-Allow-Headers Content-Type, Authorization, Origin, Accept
   # X-* options
   header >X-Content-Type-Options nosniff
   header >X-Frame-Options SAMEORIGIN
   header >X-Remote-IP {client_ip}
   # HSTS
   header >Strict-Transport-Security max-age=31536000;
   # Remove headers
   header -Last-Modified
   # X-* options
   header >X-Content-Type-Options nosniff
   header >X-Frame-Options SAMEORIGIN
   header >X-Remote-IP {client_ip}
   # HSTS
   header >Strict-Transport-Security max-age=31536000;
   # Remove headers
   header -Last-Modified
}
# For them nextjs apps that don't have a nonce
(header_nocsp) {
   header Location http:// https://
   header >Permissions-Policy idle-detection=() microphone=() payment=() screen-wake-lock=() usb=() midi=() magnetometer=() hid=() geolocation=() gamepad=() camera=() bluetooth=() ambient-light-sensor=() accelerometer=() interest-cohort=()
   # Access-Control-*
   header >Access-Control-Allow-Origin {args[0]}
   header >Access-Control-Allow-Credentials true
   header >Access-Control-Allow-Methods GET, POST, OPTIONS
   header >Access-Control-Allow-Headers Content-Type, Authorization, Origin, Accept
   # X-* options
   header >X-Content-Type-Options nosniff
   header >X-Frame-Options SAMEORIGIN
   header >X-Remote-IP {client_ip}
   # HSTS
   header >Strict-Transport-Security max-age=31536000;
   # Remove headers
   header -Last-Modified
}
(header_copr) {
   header >Cross-Origin-Resource-Policy {args[0]}
   header >Cross-Origin-Embedder-Policy {args[1]}
   header >Cross-Origin-Opener-Policy {args[2]}
}
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Compression and Cache
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
(compress) {
# This worked before but now I need to define different matcher for this one, meh.
# Maybe it didn't work back then either?
   @sensitive_cache {
      {block}
   }
   encode @sensitive_cache zstd gzip
}
(cache_static) {
   @static_resources {
      path *.ico *.svg *.gif *.jpg *.jpeg *.webp *.avif *.woff *.woff2 *.css *.png
   }
   header @static_resources Cache-Control "public, max-age=31536000, immutable"
}
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Certificates
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
(tls) {
   tls {
      dns cloudflare {$CF_API_TOKEN}
      resolvers 1.1.1.1 1.0.0.1
   }
}
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Ratelimit
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Usage: import rlimit_setup example_zone GET /web* 10 15m
(rlimit_path) {
   route {
      rate_limit {
         zone {args[0]} {
            match {
               method {args[1]}
               path {args[2]}
            }
            key {client_ip}
            events {args[3]}
            window {args[4]}
         }
      }
   }
}
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Analytics
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Usage: import umami {args[0]} { arguments }
(umami) {
   route {
      @notPath not path {args[0]}
      # Needs to be inside route block
      umami @notPath {
         {blocks.endpoint}
         {blocks.uuid}
         allowed_extensions "" .html .htm
         trusted_ip_header "X-Forwarded-For"
         client_ip_header "Client_ip"
         device_detection
      }
   }
}
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Coraza WAF
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
(coraza) {
   coraza_waf {
      load_owasp_crs
      directives `
      Include /rules/coraza.conf
      Include /rules/testing.conf
      Include @owasp_crs/*.conf
      SecRuleEngine On
      `
   }
}
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Logging
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Usage: import sub-log sub.domain.tld filename.log filesize time
(latte) {
   log {
      hostnames {args[0]}
      output file /app/logs/{args[1]} {
         mode 644
         roll_size {args[2]}
         roll_uncompressed
         roll_keep_for {args[3]}
      }
   }
}
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Misc imports
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
(proxy) {
   reverse_proxy {args[0]} {
      header_up Host {upstream_hostport}
      header_up X-Food "Pilk!"
   }
}
(proxy_extra) {
   reverse_proxy {args[0]} {
      header_up Host {upstream_hostport}
      {blocks.proxy_headers}
   }
}
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Nested imports
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
(settings) {
   import tls
   import /app/configs/Snippets/Domains
   # Global error handler
   handle_errors {
      @teapot {
         expression {http.error.status_code} == 418
      }
      @too_many_requests {
         expression {http.error.status_code} == 429
      }
      handle @too_many_requests {
         root * /app/www/errorpages
         rewrite * /429.html
         file_server
      }
      handle @teapot {
         respond 418 {
            body "Naughty."
         }
      }
   }
}
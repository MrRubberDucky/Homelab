# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# General Settings (CAPI, Hub)
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

# Just logs what things it's doing, good to keep on as it will notify you of potential bans occuring too.
LEVEL_INFO=true

# This is for sqlite database, using WAL is recommended. Otherwise performance suffers slightly without it on.
USE_WAL=true

# You can set any hostname you want here, it's only visible locally (on the container)
CUSTOM_HOSTNAME=container-lapi

# This is what your container will appear as if you enroll it into crowdsec console
ENROLL_INSTANCE_NAME=PODMAN-VM
# ENROLL_TAGS just adds extra tags that will appear on the container itself. This setting is useless if you disable LAPI however.
ENROLL_TAGS=container,local

# To my knowledge it just updates every single scenario etc. on every fresh container start
DO_HUB_UPGRADE=true


# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# External Local API
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

# /!\ There's a bug with OPNsense Crowdsec where Agent will fail to connect if it (container) has Appsec turned on. Remove any Appsec modules and edit your configurations to turn off Appsec.

# In case you have already a server running Crowdsec on it, it's better to disable LAPI.
# Then you just connect to it and it works as a "Log Parser" where it parses logs and sends
# a decision to mother server afterwards (known as Local API - LAPI)
#
# It's better resource and performance wise to do such approach.

# If you already have a Crowdsec LAPI running somewhere on your network, it's best to disable LAPI on container and turn it into an 'Agent', whose only job is to parse logs, send and receive decisions.
# This saves a little bit of resources as all other things will be done by your mother server (Local API node) that's running on your network.
# Setting this to true effectively turns your container into a 'log parser' agent that communicates with your mother-server (LAPI server)
DISABLE_LOCAL_API=true

# You need to generate machine credentials to a file from your mother-server (LAPI) machine.
# Then you input the password and the username you used while generating into these two options.
# Do NOT put LAPI credentials from /usr/local/etc/crowdsec/local_api_credentials.yaml as your machine needs unique values in order to connect successfuly.
# "But how will my LAPI server validate that's me wanting to connect?" - You approve it manually with cscli machine <name> approve. Yeah, I've spent like two hours on this once, don't ask me why it's like that.
AGENT_USERNAME=
AGENT_PASSWORD=

# Your LAPI server needs to listen on an interface that your VM / machine runs on, and you need to add necessary firewall rules allowing connection between your log parser and LAPI server.
# http / https (if you set it up) pointing to the IP address that's running the LAPI server. Yes, you can change the port on your LAPI in case it clashes with something else. Also it's TCP connection.
# ex. LOCAL_API_URL=http://10.99.99.99:8000, or if you changed your LAPI port to 10000 then it would be http://10.99.99.99:10000
LOCAL_API_URL=


# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Collection Management
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

# Just put collections here. This only seems to accept collections from crowdsec hub I think?
# Example:
# COLLECTIONS=crowdsecurity/caddy barnoux/caddy-coraza
COLLECTIONS=
# This is where you can cherry-pick troublesome, fail-prone scenarios and disable them here.
# You just put their name here like so:
# CROWDSEC_DISABLE_SCENARIOS=crowdsecurity/http-probing
# ...and just like that you disabled it.
CROWDSEC_DISABLE_SCENARIOS=
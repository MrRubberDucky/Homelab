import /app/configs/Snippets/GlobalConfig
import /app/configs/Snippets/References
# v1.1

# Wildcard certificate - *.domain.tld
*.{$FQDN} {$FQDN} {
   # Request wildcard certificate via DNS-01
   import tls
   import /app/configs/Snippets/Domains

   # Main site
   import sub-log {$FQDN} rubberverse 5M 2d
   handle @rubberverse {
      import header_csp https://{$FQDN}
      import coraza
      crowdsec
      respond "We are almost there, some stuff will be missing but our main site will be up soon!" 200
   }

   # Umami Analytics
   import no-log analytics.{$FQDN}
   handle @umami {
      import header_csp https://analytics.{$FQDN}
      crowdsec
      # Route rest of the requests
      route {
         import proxy localhost:9001
      }
   }

   # Commentario
   import sub-log comments.{$FQDN} comments 5M 2d
   handle @comments {
      import header_csp https://comments.{$FQDN}
      crowdsec
      import proxy localhost:9002
   }
   # Authentik
   import sub-log auth.{$FQDN} auth 5M 2d
   handle @pocketid {
      import header_csp https://auth.{$FQDN}
      crowdsec
      import proxy localhost:9003
   }

   # Gatus
   import no-log uptime.{$FQDN}
   handle @uptime {
      import header_csp https://uptime.{$FQDN}
      import coraza
      crowdsec
      import proxy localhost:9004
   }

   # Search
   # Queries aren't logged, though Caddy can still see them.
   # It's a web server, what did you expect?
   import no-log search.{$FQDN}
   handle @search {
      import header_csp https://search.{$FQDN}
      import coraza
      route {
         rate_limit {
            zone search_rlimit {
               match {
                  method GET
                  path /web*
               }
               key {client_ip}
               events 5
               window 2m
            }
         }
      reverse_proxy localhost:9006
      }
   }

   # Miniflux
   import no-log news.{$FQDN}
   handle @miniflux {
     import header_csp https://news.{$FQDN}
     import coraza
     crowdsec
     import proxy localhost:9005
   }

   # This handles errors globally, for now I only just want it for rate limit
   # No, you can't put it in handle @domain directive, I've tried and I've wasted hours on it.
   handle_errors {
      @too_many_requests {
         expression {http.error.status_code} == 429
      }
       handle @too_many_requests {
         root * /app/www/errorpages
         rewrite * /429.html
         file_server
      }
   }
   
   # Drop logging to anything else
   # It's done so I don't have spam for the time being from ActivityPub software
   # trying to hit up social.rubberverse.xyz (I'm still setting it up)
   log {
       output discard
   }
   # Abort requests to non-existent sub-domains
   abort
}
